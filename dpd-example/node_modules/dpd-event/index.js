


// customized for gymcentral.
//************************************************
var gcCustom={};
gcCustom.request=request=require('request');
gcCustom.gcm=require('node-gcm');
gcCustom.apn=require('apn');

// this is the gcm sender
var sender = new gcCustom.gcm.Sender('<place your android sender here>');

// for the sandbox
var apnConnection = new gcCustom.apn.Connection({
    // insert the options here
    cert:"./ios-push-certificates/devcert.pem",
    key:"./ios-push-certificates/devkey.pem"
});

// test token 372abd1daa15636a3c49a4eb19afc20c9cdcec91696adeb4b28b833d698f41f2

gcCustom.sendToIOS=function(tokens,msg,callback){

    var note = new gcCustom.apn.Notification();
    note.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.
    note.badge = 1;
    note.sound = "ping.aiff";
    note.alert = msg;
    note.payload = {'messageFrom': 'GymCentral'};
    console.log(apnConnection.pushNotification(note, tokens));
    callback();
};


gcCustom.sendToAndroid=function(tokens,msg,callback){
    // compose message
    var message = new gcCustom.gcm.Message();
    // Value the payload data to send...
    message.addData('message', msg);
    message.addData('title', 'Gym Central');
    message.addData('msgcnt', '3'); // Shows up in the notification in the status bar
    message.addData('soundname', 'beep.wav'); //Sound to play upon notification
    sender.send(message,tokens, 4, function (err, result) {
        callback(result);
    });
};






//************************************************

var Resource = require('deployd/lib/resource')
  , Script = require('deployd/lib/script')
  , util = require('util');

function EventResource() {
  Resource.apply(this, arguments);
}
util.inherits(EventResource, Resource);

EventResource.label = "Event";
EventResource.events = ["get", "post"];

module.exports = EventResource;

EventResource.prototype.clientGeneration = true;

EventResource.prototype.handle = function (ctx, next) {
  var parts = ctx.url.split('/').filter(function(p) { return p; });

  var result = {};

  var domain = {
      url: ctx.url
    , parts: parts
    , query: ctx.query
    , body: ctx.body
    , 'this': result
    , setResult: function(val) {
      result = val;
    },
      gcRequest:{},
      pushAndroid:gcCustom.sendToAndroid,
      pushIOS:gcCustom.sendToIOS
  };

  if (ctx.method === "POST" && this.events.post) {
    this.events.post.run(ctx, domain, function(err) {
      ctx.done(err, result);
    });
  } else if (ctx.method === "GET" && this.events.get) {
    this.events.get.run(ctx, domain, function(err) {
      ctx.done(err, result);
    });
  } else {
    next();
  }

  
};